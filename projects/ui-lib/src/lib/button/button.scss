@use '../styles/variables' as *;
@use '../styles/mixins' as *;

.ui-button {
  @include button-base;
  gap: $spacing-sm;
  position: relative;
  border-radius: $border-radius-md;

  // Sizes
  &--sm {
    padding: $spacing-xs $spacing-md;
    font-size: $font-size-sm;
    min-height: 2rem;
  }

  &--md {
    padding: $spacing-sm $spacing-lg;
    font-size: $font-size-md;
    min-height: 2.5rem;
  }

  &--lg {
    padding: $spacing-md $spacing-xl;
    font-size: $font-size-lg;
    min-height: 3rem;
  }

  // Variants
  &--primary {
    background-color: $primary-600;
    color: white;

    &:hover:not(:disabled) {
      background-color: $primary-700;
    }

    &:active:not(:disabled) {
      background-color: $primary-800;
    }
  }

  &--secondary {
    background-color: $secondary-600;
    color: white;

    &:hover:not(:disabled) {
      background-color: $secondary-700;
    }

    &:active:not(:disabled) {
      background-color: $secondary-800;
    }
  }

  &--success {
    background-color: $success-500;
    color: white;

    &:hover:not(:disabled) {
      background-color: darken-color($success-500, 10%);
    }

    &:active:not(:disabled) {
      background-color: darken-color($success-500, 15%);
    }
  }

  &--warning {
    background-color: $warning-500;
    color: white;

    &:hover:not(:disabled) {
      background-color: darken-color($warning-500, 10%);
    }

    &:active:not(:disabled) {
      background-color: darken-color($warning-500, 15%);
    }
  }

  &--error {
    background-color: $error-500;
    color: white;

    &:hover:not(:disabled) {
      background-color: darken-color($error-500, 10%);
    }

    &:active:not(:disabled) {
      background-color: darken-color($error-500, 15%);
    }
  }

  &--ghost {
    background-color: transparent;
    color: $gray-700;
    border: 1px solid $gray-300;

    &:hover:not(:disabled) {
      background-color: $gray-100;
      border-color: $gray-400;
    }

    &:active:not(:disabled) {
      background-color: $gray-200;
    }
  }

  &--full-width {
    width: 100%;
  }

  &--loading {
    position: relative;
  }

  &__content {
    display: flex;
    align-items: center;
    gap: $spacing-sm;

    &--hidden {
      opacity: 0;
    }
  }

  &__spinner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &__spinner-icon {
    width: 1.25rem;
    height: 1.25rem;
    animation: spin 1s linear infinite;
  }

  &__spinner-circle {
    stroke: currentColor;
    stroke-dasharray: 60;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes dash {
  0% {
    stroke-dashoffset: 60;
  }
  50% {
    stroke-dashoffset: 15;
  }
  100% {
    stroke-dashoffset: 60;
  }
}
